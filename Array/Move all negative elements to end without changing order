Given an unsorted array arr[] of size n having both negative and positive integers. The task is place all negative element at the end of array without changing the order of positive element and negative element.

 

Example 1:

Input : 
n = 8
arr[] = {1, -1, 3, 2, -7, -5, 11, 6 }
Output : 
1  3  2  11  6  -1  -7  -5

Example 2:

Input : 
n = 8
arr[] = {-5, 7, -3, -4, 9, 10, -1, 11}
Output :
7  9  10  11  -5  -3  -4  -1
 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function segregateElements() which takes the array arr[] and its size N as inputs and store the answer in the array arr[] itself.

 

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(n)
 


Constraints:
1 ≤ n ≤ 106
-109 ≤ arr[i] ≤ 109

Hint: Create temporary array first add positive value or value eqaul to zero and then add negative value, copy temporary array to actual array.

code:
//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
    public:
    void segregateElements(int arr[],int n)
    {   
        int count=0;
        int temp[n];
        for(int i=0;i<n;i++){
            if(arr[i]>=0){
                temp[count]=arr[i];
                count++;
            }
        }
        if(count==0 || count==n){
            return;
        }
        for(int j=0;j<n;j++){
            if(arr[j]<0){
                temp[count]=arr[j];
                count++;
            }
        }
        for(int k=0;k<n;k++){
            arr[k]=temp[k];
        }
    }
};

//{ Driver Code Starts.
int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int a[n];
		for(int i=0;i<n;i++)
		cin>>a[i];
		Solution ob;
		ob.segregateElements(a,n);
		
        for(int i=0;i<n;i++)
        cout<<a[i]<<" ";
		cout<<endl;
	}
}

// } Driver Code Ends
